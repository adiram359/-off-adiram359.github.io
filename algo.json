{"data": [{"number": "300", "title": "some title", "link": "some link.com", "content": "from typing import *\nclass Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        piles = []\n        prev = {} # (pile index, card number) -> card number\n        for num in nums:\n            left, right = 0, len(piles)\n            while left != right:\n                mid = (left + right)//2\n                if piles[mid][-1] >= num:\n                    right = mid\n                else:\n                    left = mid + 1\n            \n            if left == len(piles):\n                piles.append([])\n            \n            piles[left].append(num)\n            if left != 0:\n                prev[(left, num)] = piles[left-1][-1]\n\n        print(piles)\n\n        return len(piles)\n\n\n\n\ns = Solution()\ns.lengthOfLIS([6, 3, 5, 10, 11, 2, 9, 14, 13, 7, 4, 8, 12])"}, {"number": "981", "title": "some title", "link": "some link.com", "content": "class TimeMap:\n\n    def __init__(self):\n        self.data = {}\n\n\tdef set(self, k: str, v: str, t: int) -> None:\n\t\tif k not in self.data:\n\t\t\tself.data[k] = []\n\t\tself.data[k].append((k, v))\n        \n\n    def get(self, k: str, t: int) -> str:\n        \n\n\n# Your TimeMap object will be instantiated and called as such:\n# obj = TimeMap()\n# obj.set(key,value,timestamp)\n# param_2 = obj.get(key,timestamp)"}, {"number": "33", "title": "some title", "link": "some link.com", "content": "class Solution:\n\tdef search(self, A, t):\n\t\tl, r = 0, len(A) -1\n\t\twhile l < r:\n\t\t\tgo_left = False\n\t\t\tmid = (l+r)//2\n\t\t\tif A[l] <= A[mid]:\n\t\t\t\tgo_left = A[l] <= t <= A[mid]\n\t\t\telse:\n\t\t\t\tgo_left = not (A[mid+1] <= t <= A[r])\n\t\t\t\n\t\t\tif go_left:\n\t\t\t\tr = mid\n\t\t\telse:\n\t\t\t\tl = mid+1\n\t\tif A[l] == t:\n\t\t\treturn l\n\t\treturn -1\n\n\n\ns = Solution()\n\nres = s.search([1,2,3,4], 3)\nprint(res, 2)\n\nres = s.search([2,3,4, 1], 3)\nprint(res, 1)\n\nres = s.search([3,4, 1, 2], 3)\nprint(res, 0)\n\nres = s.search([4, 1,2,3], 3)\nprint(res, 3)\n\nres = s.search([1, 2, 3], 1)\nprint(res, 0)\n\nres = s.search([2, 3, 1], 1)\nprint(res, 2)\n\nres = s.search([3, 1, 2], 1)\nprint(res, 1)\n\n\n"}]}
